type Operator {
  id: ID!
  username: String!
  password: String!
}

type Tenant {
  id: ID!
  name: String!
  email: String!
  dateOfBirth: String!
  phone: String!
  cpf: String!
  apartmentNumber: String!
  representative: Boolean!
}

type AuthData {
  operatorId: ID!
  token: String!
  tokenExpiration: Int!
}

type Query {
  login(username: String!, password: String!): AuthData!

  operators: [Operator!]!
  operator(id: ID!): Operator

  tenants: [Tenant!]!
  tenant(id: ID!): Tenant
  tenantByApartment(apartmentNumber: String!): [Tenant!]!
}

type Mutation {
  createTenant(
    name: String!
    email: String!
    dateOfBirth: String!
    phone: String!
    cpf: String!
    apartmentNumber: String!
    representative: Boolean!
  ): Tenant
  createOperator(username: String!, password: String!): Operator
  deleteTenant(id: ID!): Tenant
  updateTenant(
    id: ID!
    name: String!
    email: String!
    dateOfBirth: String!
    phone: String!
    cpf: String!
    apartmentNumber: String!
    representative: Boolean!
  ): Tenant
}
